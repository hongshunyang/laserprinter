#!/usr/bin/env python
# vim:set et sts=4 sw=4:
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Fri Jun 18 15:37:33 2010

import wx
#sys.path.append("../module")
import Shutter_drivers

class preferencesFrame(wx.Dialog):
    def __init__(self,parent,shutter,lpglobaldata):
        wx.Dialog.__init__(self, None,-1)
             
        # Add component
        self.notebook_prefer = wx.Notebook(self, -1, style=0)
        self.notebook_prefer_Lang = wx.Panel(self.notebook_prefer, -1)
        self.notebook_prefer_Shutter = wx.Panel(self.notebook_prefer, -1)
        self.notebook_prefer_Mover = wx.Panel(self.notebook_prefer, -1)
        self.sizer_shutter_settings_staticbox = wx.StaticBox(self.notebook_prefer_Shutter, -1, _("Shutter settings"))
        self.sizer_language_set_staticbox = wx.StaticBox(self.notebook_prefer_Lang, -1, _("Language"))
        self.sizer_mover_param_staticbox = wx.StaticBox(self.notebook_prefer_Mover, -1, _("Mover Prameters"))
        self.label_step_length = wx.StaticText(self.notebook_prefer_Mover, -1, _("Step length(mm):"))
        self.text_ctrl_step = wx.TextCtrl(self.notebook_prefer_Mover, -1,"")
        self.label_Velocity = wx.StaticText(self.notebook_prefer_Mover, -1, _("Scanning Velocity:"))
        self.text_ctrl_V = wx.TextCtrl(self.notebook_prefer_Mover, -1, "")
        self.label_Acceleration = wx.StaticText(self.notebook_prefer_Mover, -1, _("Manual Velocity:"))
        self.text_ctrl_A = wx.TextCtrl(self.notebook_prefer_Mover, -1, "")
        self.radio_box_mirrorX = wx.RadioBox(self.notebook_prefer_Mover, -1, _("Whether mirror X"), choices=[_("No"), _("Yes")], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.label_comport = wx.StaticText(self.notebook_prefer_Shutter, -1, _("COM port:"))
        self.combo_box_comport = wx.ComboBox(self.notebook_prefer_Shutter, -1, choices=[_("COM1"), _("COM2"),_("/dev/ttyS0"), _("/dev/ttyS1")], style=wx.CB_DROPDOWN)
        self.radio_box_shutter = wx.RadioBox(self.notebook_prefer_Shutter, -1, _("Shutter Manual Control"), choices=[_("Open"), _("Close")], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.combo_box_lang = wx.ComboBox(self.notebook_prefer_Lang, -1, choices=[_("English"), _("Chinese")], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, _("&Cancel"))
        self.button_ok = wx.Button(self, wx.ID_OK, _("&OK"))
        
        # reference lpglobaldata
        self.lpglobaldata=lpglobaldata
	self.shutter=shutter

        
        
        self.__set_properties()
        self.__do_layout()


        self.Bind(wx.EVT_RADIOBOX, self.evt_OnShtterControl, self.radio_box_shutter)
        self.Bind(wx.EVT_BUTTON, self.evt_OnPreferCancel, self.button_cancel)
        self.Bind(wx.EVT_BUTTON, self.evt_OnPreferOK, self.button_ok)
        # end wxGlade
        
    

    def __set_properties(self):
        # begin wxGlade: preferencesFrame.__set_properties
        self.SetTitle(_("Preferences"))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.SetSize((516, 420))
        self.combo_box_comport.SetMinSize((100, 27))
        self.radio_box_shutter.SetMinSize((200, 45))
        self.radio_box_mirrorX.SetMinSize((200, 45))
        self.notebook_prefer.SetMinSize((469, 200))
        
        # Default value.
        self.radio_box_shutter.SetSelection(1)
        self.radio_box_mirrorX.SetSelection(self.lpglobaldata.WhetherMirrorX)
        
        # read the configration value
        
        self.text_ctrl_step.SetValue(self.lpglobaldata.StepLength)
        self.text_ctrl_V.SetValue(self.lpglobaldata.Vscaning)
        self.text_ctrl_A.SetValue(self.lpglobaldata.Vmanual)
        self.combo_box_lang.SetSelection(self.lpglobaldata.Language)
        self.combo_box_comport.SetSelection(self.lpglobaldata.ComPort)
         
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: preferencesFrame.__do_layout
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_check = wx.BoxSizer(wx.HORIZONTAL)
        sizer_notebook = wx.BoxSizer(wx.VERTICAL)
        sizer_lang = wx.BoxSizer(wx.HORIZONTAL)
        sizer_language_set = wx.StaticBoxSizer(self.sizer_language_set_staticbox, wx.VERTICAL)
        sizer_notebook_shutter = wx.BoxSizer(wx.HORIZONTAL)
        sizer_shutter_settings = wx.StaticBoxSizer(self.sizer_shutter_settings_staticbox, wx.VERTICAL)
        sizer_shutter_settings_comport = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mover = wx.BoxSizer(wx.VERTICAL)
        sizer_mover_param = wx.StaticBoxSizer(self.sizer_mover_param_staticbox, wx.VERTICAL)
        sizer_mvParam4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mvParam3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mvParam2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mvParam1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_mvParam1.Add(self.label_step_length, 2, wx.LEFT|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 40)
        sizer_mvParam1.Add(self.text_ctrl_step, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 20)
        sizer_mover_param.Add(sizer_mvParam1, 1, wx.EXPAND, 0)
        sizer_mvParam2.Add(self.label_Velocity, 2, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 40)
        sizer_mvParam2.Add(self.text_ctrl_V, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 20)
        sizer_mover_param.Add(sizer_mvParam2, 1, wx.EXPAND, 0)
        sizer_mvParam3.Add(self.label_Acceleration, 2, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 40)
        sizer_mvParam3.Add(self.text_ctrl_A, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 20)
        sizer_mover_param.Add(sizer_mvParam3, 1, wx.EXPAND, 0)
        sizer_mvParam4.Add(self.radio_box_mirrorX, 1, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 40)
        sizer_mover_param.Add(sizer_mvParam4, 1, wx.EXPAND, 0)
        sizer_mover.Add(sizer_mover_param, 1, wx.ALL|wx.EXPAND, 45)
        self.notebook_prefer_Mover.SetSizer(sizer_mover)
        
        sizer_shutter_settings_comport.Add(self.label_comport, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_shutter_settings_comport.Add(self.combo_box_comport, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_shutter_settings.Add(self.radio_box_shutter, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.TOP, 20)
        sizer_shutter_settings.Add(sizer_shutter_settings_comport, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.TOP, 20)
        sizer_notebook_shutter.Add(sizer_shutter_settings, 1, wx.ALL|wx.EXPAND, 35)
        self.notebook_prefer_Shutter.SetSizer(sizer_notebook_shutter)
        
        sizer_language_set.Add(self.combo_box_lang, 0, wx.TOP|wx.ALIGN_CENTER_HORIZONTAL, 30)
        sizer_lang.Add(sizer_language_set, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 80)
        self.notebook_prefer_Lang.SetSizer(sizer_lang)
        self.notebook_prefer.AddPage(self.notebook_prefer_Mover, _("Mover"))
        self.notebook_prefer.AddPage(self.notebook_prefer_Shutter, _("Shutter"))
        self.notebook_prefer.AddPage(self.notebook_prefer_Lang, _("Language"))
        sizer_notebook.Add(self.notebook_prefer, 1, wx.ALL|wx.EXPAND, 4)
        sizer_main.Add(sizer_notebook, 8, wx.EXPAND, 0)
        sizer_check.Add((120, 28), 0, wx.LEFT|wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_VERTICAL, 20)
        sizer_check.Add(self.button_cancel, 0, wx.ALL|wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 6)
        sizer_check.Add(self.button_ok, 0, wx.ALL|wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 6)
        sizer_check.Add((120, 28), 0, wx.RIGHT|wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_VERTICAL, 20)
        sizer_main.Add(sizer_check, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_main)
        self.Layout()
        self.Centre()
        # end wxGlade


    def evt_OnShtterControl(self, event):
	self.shutter_status=self.radio_box_shutter.GetSelection()
	ret=self.shutter.connect()
	if (ret==-1):
		self.error_dlg=wx.MessageDialog(None,_("Can not open comport, Please check!"),_("Error!"),wx.OK|wx.ICON_ERROR)
		self.error_dlg.ShowModal()
		return -1
	elif (ret == -2):
		self.error_dlg=wx.MessageDialog(None,_("Comport read/write error!"),_("Error!"),wx.OK|wx.ICON_ERROR)
		self.error_dlg.ShowModal()
		return -1
		
	if self.shutter_status:
		self.shutter.close()
	else:
		self.shutter.open()
	self.shutter.disconnect()
	
    def evt_OnPreferCancel(self, event):
        self.Destroy()

    def evt_OnPreferOK(self, event):
    	 #Vsgamma and Asgamma and StepLength should be checked!
		 try:
		 	 self.lpglobaldata.Vscaning=self.text_ctrl_V.GetValue()
		 	 self.lpglobaldata.Vmanual=self.text_ctrl_A.GetValue()
		 	 self.lpglobaldata.StepLength=self.text_ctrl_step.GetValue()
		 	 self.lpglobaldata.ComPort=self.combo_box_comport.GetCurrentSelection()
		 	 self.lpglobaldata.ComPort_string=self.combo_box_comport.GetValue()
		 	 self.lpglobaldata.Language=self.combo_box_lang.GetCurrentSelection()
		 	 self.lpglobaldata.WhetherMirrorX=self.radio_box_mirrorX.GetSelection()
		 	 self.temp_vscaning=float(self.lpglobaldata.Vscaning)
			 self.temp_vmanual=float(self.lpglobaldata.Vmanual)
			 self.temp=float(self.lpglobaldata.StepLength)
			 if (self.temp_vscaning > 300) or (self.temp_vmanual >300):
				err_dialog = wx.MessageDialog(None,_("Error: the velocity will never big than 300mm/s,please re input!"),_("Error"), wx.OK|wx.ICON_ERROR)
				err_dialog.ShowModal()
				return -1
			 # Save configurations
				 
		 	 self.lpglobaldata.SaveCfg()
		 	 self.Destroy()
		 	 
		 	   
		 except ValueError:
		 	 __errDialog = wx.MessageDialog(None,_("Error: input is not valid value"), \
        			_("Error"), wx.OK| wx.ICON_ERROR)
			 __errDialog.ShowModal()


		 


